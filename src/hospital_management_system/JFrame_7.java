/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital_management_system;

import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.UIManager;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Dinuwan Theekshana
 */
public class JFrame_7 extends javax.swing.JFrame {

    /**
     * Creates new form JFrame_7
     */
    public JFrame_7() {
        initComponents();
        showTableData();
        showDate();
        showTime();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
    }
        
    //Date and Time

    void showDate() {

        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("dd - MM - YYYY");
        jLabel_Date.setText(s.format(d));
    }

    void showTime() {

        new Timer(0, (ActionEvent e) -> {
            Date d = new Date();
            SimpleDateFormat s = new SimpleDateFormat("hh - mm - ss a");
            jLabel_Time.setText(s.format(d));
        }).start();
    }
   
        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel_Time = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel_Date = new javax.swing.JLabel();
        jDateChooser_DOB = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_About = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField_Patient_ID = new javax.swing.JTextField();
        jTextField_Ptn_Name = new javax.swing.JTextField();
        jTextField_Doc_Name = new javax.swing.JTextField();
        jTextField_Address = new javax.swing.JTextField();
        jButton_Clear = new javax.swing.JButton();
        jButton_Back = new javax.swing.JButton();
        jButton_Add = new javax.swing.JButton();
        jButton_Delete = new javax.swing.JButton();
        jButton_Serch = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jDateChooser_Addmited_Date1 = new com.toedter.calendar.JDateChooser();
        jComboBox_Gender = new javax.swing.JComboBox<>();
        jTextField_Tel_No1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField_Relation_Phone_No = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField_Relation_Name = new javax.swing.JTextField();
        jButton_Update = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem_New1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem_Open_Cal = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_Close1 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1_logout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add Patient details");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Hospital_Management_System/person-icon.png"))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 7));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Lucida Calligraphy", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Patient details");
        jLabel1.setToolTipText("");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 20, 970, 30);

        jLabel_Time.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel_Time.setText("Time :");
        jPanel1.add(jLabel_Time);
        jLabel_Time.setBounds(30, 60, 200, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Patient ID : ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(40, 110, 120, 30);

        jLabel_Date.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel_Date.setText(" Date :");
        jPanel1.add(jLabel_Date);
        jLabel_Date.setBounds(730, 70, 230, 29);

        jDateChooser_DOB.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jDateChooser_DOB);
        jDateChooser_DOB.setBounds(220, 310, 220, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Admited Date :");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(40, 160, 140, 22);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Name of patient :");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(40, 210, 170, 20);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Name of doctor :");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(40, 260, 160, 22);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Gender :");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(40, 360, 110, 22);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Date Of Birth :");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(40, 310, 130, 22);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("About of patient :");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(500, 320, 160, 22);

        jTextArea_About.setColumns(20);
        jTextArea_About.setRows(5);
        jTextArea_About.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setViewportView(jTextArea_About);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(730, 320, 220, 70);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("Relation's Contact No :");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(500, 220, 220, 22);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("Address :");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(500, 270, 83, 22);

        jTextField_Patient_ID.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jTextField_Patient_ID);
        jTextField_Patient_ID.setBounds(220, 110, 220, 30);

        jTextField_Ptn_Name.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jTextField_Ptn_Name);
        jTextField_Ptn_Name.setBounds(220, 210, 220, 30);

        jTextField_Doc_Name.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jTextField_Doc_Name);
        jTextField_Doc_Name.setBounds(220, 260, 220, 30);

        jTextField_Address.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jTextField_Address);
        jTextField_Address.setBounds(730, 270, 220, 30);

        jButton_Clear.setBackground(new java.awt.Color(0, 84, 140));
        jButton_Clear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Clear.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Clear.setText("Clear");
        jButton_Clear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_Clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ClearActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_Clear);
        jButton_Clear.setBounds(680, 650, 120, 40);

        jButton_Back.setBackground(new java.awt.Color(0, 84, 140));
        jButton_Back.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Back.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Back.setText("<<Back");
        jButton_Back.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_Back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BackActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_Back);
        jButton_Back.setBounds(40, 650, 120, 40);

        jButton_Add.setBackground(new java.awt.Color(0, 84, 140));
        jButton_Add.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Add.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Add.setText("Add");
        jButton_Add.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_Add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_Add);
        jButton_Add.setBounds(200, 650, 120, 40);

        jButton_Delete.setBackground(new java.awt.Color(0, 84, 140));
        jButton_Delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Delete.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Delete.setText("Delete");
        jButton_Delete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_Delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DeleteActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_Delete);
        jButton_Delete.setBounds(360, 650, 120, 40);

        jButton_Serch.setBackground(new java.awt.Color(0, 84, 140));
        jButton_Serch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Serch.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Serch.setText("Search");
        jButton_Serch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_Serch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Serch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SerchActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_Serch);
        jButton_Serch.setBounds(840, 650, 120, 40);

        jScrollPane3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(40, 410, 920, 210);

        jDateChooser_Addmited_Date1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jDateChooser_Addmited_Date1);
        jDateChooser_Addmited_Date1.setBounds(220, 160, 220, 30);

        jComboBox_Gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "Male", "Female" }));
        jPanel1.add(jComboBox_Gender);
        jComboBox_Gender.setBounds(220, 360, 220, 30);

        jTextField_Tel_No1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jTextField_Tel_No1);
        jTextField_Tel_No1.setBounds(730, 120, 220, 30);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Telephon No :");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(500, 120, 126, 22);

        jTextField_Relation_Phone_No.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jTextField_Relation_Phone_No);
        jTextField_Relation_Phone_No.setBounds(730, 220, 220, 30);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Relation's Name :");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(500, 170, 170, 22);

        jTextField_Relation_Name.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jTextField_Relation_Name);
        jTextField_Relation_Name.setBounds(730, 170, 220, 30);

        jButton_Update.setBackground(new java.awt.Color(0, 84, 140));
        jButton_Update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Update.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Update.setText("Update");
        jButton_Update.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_Update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UpdateActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_Update);
        jButton_Update.setBounds(520, 650, 120, 40);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setIcon(new javax.swing.ImageIcon("D:\\My Java Projects\\Hospital_Management_System\\Images\\Full-Screen-HD-Wallpapers-9.jpg")); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 10, 970, 700);

        jMenu2.setText("File");

        jMenuItem_New1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_New1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hospital_management_system/New-file-icon.png"))); // NOI18N
        jMenuItem_New1.setText("New");
        jMenuItem_New1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_NewActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_New1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hospital_management_system/Printer-icon.png"))); // NOI18N
        jMenuItem2.setText("Print");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem_Open_Cal.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem_Open_Cal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hospital_management_system/Scientific-calculator-icon.png"))); // NOI18N
        jMenuItem_Open_Cal.setText("Open Calculator");
        jMenuItem_Open_Cal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_Open_CalActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_Open_Cal);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_LEFT, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hospital_management_system/Home-icon.png"))); // NOI18N
        jMenuItem1.setText("Go Back to Home Page");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);
        jMenu2.add(jSeparator1);

        jMenuItem_Close1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem_Close1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hospital_management_system/Exit-icon.png"))); // NOI18N
        jMenuItem_Close1.setText("Close");
        jMenuItem_Close1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_Close1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_Close1);
        jMenu2.add(jSeparator2);

        jMenuItem1_logout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1_logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hospital_management_system/Logout-icon.png"))); // NOI18N
        jMenuItem1_logout.setText("Logout");
        jMenuItem1_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1_logoutActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1_logout);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 989, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BackActionPerformed

        this.dispose();
        JFrame_5 f5 = new JFrame_5();
        f5.setVisible(true);

    }//GEN-LAST:event_jButton_BackActionPerformed

    private void jButton_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ClearActionPerformed

        int a;
        a = JOptionPane.showConfirmDialog(null, "Are you sure to you went to clear the data?", "Clear Data", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (a == 0) {

            jTextArea_About.setText(null);
            jTextField_Address.setText(null);
            jDateChooser_DOB.setDate(null);
            jDateChooser_Addmited_Date1.setDate(null);
            jTextField_Doc_Name.setText(null);
            jTextField_Patient_ID.setText(null);
            jTextField_Ptn_Name.setText(null);
            jTextField_Tel_No1.setText(null);
            jComboBox_Gender.setSelectedItem("Select Gender");
            jTextField_Relation_Name.setText(null);
            jTextField_Relation_Phone_No.setText(null);
            jTextField_Patient_ID.grabFocus();

        }

    }//GEN-LAST:event_jButton_ClearActionPerformed

    private void jButton_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddActionPerformed

        if (jTextArea_About.getText().trim().isEmpty() && jTextField_Address.getText().trim().isEmpty() && jTextField_Doc_Name.getText().trim().isEmpty() && jComboBox_Gender.getSelectedItem() == null && jTextField_Patient_ID.getText().trim().isEmpty() && (jTextField_Ptn_Name.getText().trim().isEmpty() && jTextField_Tel_No1.getText().trim().isEmpty() && (jDateChooser_DOB.getDate() == null) && (jDateChooser_Addmited_Date1.getDate() == null))) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before add data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if ((jDateChooser_Addmited_Date1.getDate() == null)) {  // It use only JdayChooser

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before add data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if ((jDateChooser_DOB.getDate() == null)) {  // It use only JdayChooser

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before add data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextArea_About.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before add data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Address.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before add data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Doc_Name.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before add data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jComboBox_Gender.getSelectedItem() == null) {   //Empty Combo box ekak pennwana vidiha

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before add data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Patient_ID.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before add data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Ptn_Name.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before add data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Tel_No1.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before add data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Relation_Name.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before add data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Relation_Phone_No.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before add data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else {

            try {

                Class.forName("com.mysql.cj.jdbc.Driver");
                String url = "jdbc:mysql://localhost:3306/";
                String db = "hospital_management_system_database";
                String user = "root";
                String pword = "123456";

                Connection con = null;
                con = DriverManager.getConnection(url + db, user, pword);

                String query = "INSERT INTO patient_details(Patient_ID, Admited_Date, Name_of_patient, Name_of_doctor, Date_Of_Birth, Gender, Telephon_No, Address, Name_of_Relational, Telephone_No_of_Relational, About_of_patient)VALUES(?,?,?,?,?,?,?,?,?,?,?)";

                PreparedStatement pst = con.prepareStatement(query);

                pst.setString(1, jTextField_Patient_ID.getText());//query eke adala feild eka yedi athi place eke number eka merhanadi parameeeter eka lesa yediya yuthuya.

                SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                String date1 = sdf1.format(jDateChooser_Addmited_Date1.getDate());
                pst.setString(2, date1);//Date Chhoser eken date ekaa add kirima

                pst.setString(3, jTextField_Ptn_Name.getText());
                pst.setString(4, jTextField_Doc_Name.getText());

                SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
                String date2 = sdf2.format(jDateChooser_DOB.getDate());
                pst.setString(5, date2);//Date Chhoser eken date ekaa add kirima

                String gender;  // Combo Box ekaka data `db ekata connect karana hati.
                gender = jComboBox_Gender.getSelectedItem().toString();
                pst.setString(6, gender);

                pst.setString(7, jTextField_Tel_No1.getText());
                pst.setString(8, jTextField_Address.getText());
                pst.setString(9, jTextField_Relation_Name.getText());
                pst.setString(10, jTextField_Relation_Phone_No.getText());
                pst.setString(11, jTextArea_About.getText());
                pst.executeUpdate();

                System.out.println(pst);
                System.out.println("1 row affected");

                JOptionPane.showMessageDialog(null, "Data Inserted Succsessfully!!!");

                con.close();

            } catch (HeadlessException | ClassNotFoundException | SQLException ex) {

                Logger.getLogger(JFrame_7.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex);

            

            jTextArea_About.setText(null);
            jTextField_Address.setText(null);
            jDateChooser_DOB.setDate(null);
            jDateChooser_Addmited_Date1.setDate(null);
            jTextField_Doc_Name.setText(null);
            jTextField_Patient_ID.setText(null);
            jTextField_Ptn_Name.setText(null);
            jTextField_Tel_No1.setText(null);
            jComboBox_Gender.setSelectedItem("Select Gender");
            jTextField_Relation_Name.setText(null);
            jTextField_Relation_Phone_No.setText(null);
            jTextField_Patient_ID.grabFocus();
            

            }
        }

        showTableData();
    }//GEN-LAST:event_jButton_AddActionPerformed

    private void jButton_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DeleteActionPerformed

        if (jTextField_Patient_ID.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter the patient id before delete data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else {

            try {

                Class.forName("com.mysql.cj.jdbc.Driver");
                String url = "jdbc:mysql://localhost:3306/";
                String db = "hospital_management_system_database";
                String user = "root";
                String pword = "123456";

                Connection con = null;
                con = DriverManager.getConnection(url + db, user, pword);

                int a;
                a = JOptionPane.showConfirmDialog(null, "Are you sure to you went delete that record in databasse", "Delete Record", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);

                if (a == 0) {

                    String query = "DELETE FROM patient_details WHERE Patient_ID=?";

                    PreparedStatement pst = con.prepareStatement(query);

                    pst.setString(1, jTextField_Patient_ID.getText());
                    pst.executeUpdate();

                    jTextArea_About.setText(null);
                    jTextField_Address.setText(null);
                    jDateChooser_DOB.setDate(null);
                    jDateChooser_Addmited_Date1.setDate(null);
                    jTextField_Doc_Name.setText(null);
                    jTextField_Patient_ID.setText(null);
                    jTextField_Ptn_Name.setText(null);
                    jTextField_Tel_No1.setText(null);
                    jComboBox_Gender.setSelectedItem("Select Gender");
                    jTextField_Relation_Name.setText(null);
                    jTextField_Relation_Phone_No.setText(null);
                    jTextField_Patient_ID.grabFocus();

                    System.out.println(pst);
                    System.out.println("1 row affected");

                    JOptionPane.showMessageDialog(null, "Record Deleted Succsessftlly...");

                }

                con.close();

            } catch (HeadlessException | ClassNotFoundException | SQLException ex) {

                Logger.getLogger(JFrame_7.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex);

                jTextField_Patient_ID.setText(null);
                jTextField_Patient_ID.grabFocus();

            }

        }
        showTableData();
    }//GEN-LAST:event_jButton_DeleteActionPerformed

    private void jButton_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UpdateActionPerformed

        if (jTextArea_About.getText().trim().isEmpty() && jTextField_Address.getText().trim().isEmpty() && jTextField_Doc_Name.getText().trim().isEmpty() && jComboBox_Gender.getSelectedItem() == null && jTextField_Patient_ID.getText().trim().isEmpty() && (jTextField_Ptn_Name.getText().trim().isEmpty() && jTextField_Tel_No1.getText().trim().isEmpty() && (jDateChooser_DOB.getDate() == null) && (jDateChooser_Addmited_Date1.getDate() == null))) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before the updating.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if ((jDateChooser_Addmited_Date1.getDate() == null)) {  // It use only JdayChooser

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before the updating.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if ((jDateChooser_DOB.getDate() == null)) {  // It use only JdayChooser

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before the updating.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextArea_About.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before the updating.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Address.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before the updating.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Doc_Name.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before the updating.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jComboBox_Gender.getSelectedItem() == null) {   //Empty Combo box ekak pennwana vidiha

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before the updating.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Patient_ID.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before the updating.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Ptn_Name.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before the updating.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Tel_No1.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before the updating.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Relation_Name.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before the updating.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else if (jTextField_Relation_Phone_No.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter data to all feilds before the updating.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else {

            try {

                Class.forName("com.mysql.cj.jdbc.Driver");
                String url = "jdbc:mysql://localhost:3306/";
                String db = "hospital_management_system_database";
                String user = "root";
                String pword = "123456";

                Connection con = null;
                con = DriverManager.getConnection(url + db, user, pword);

                String query = "UPDATE patient_details SET Admited_Date=? ,Name_of_patient=? ,Name_of_doctor=? ,Date_Of_Birth=? ,Gender=? ,Telephon_No=? ,Address=? ,Name_of_Relational=? ,Telephone_No_of_Relational=? ,About_of_patient=? WHERE Patient_ID=?";//query wka ewnass wenawa ekinekata

                PreparedStatement pst = con.prepareStatement(query);

                pst.setString(11, jTextField_Patient_ID.getText());//query eke adala feild eka yedi athi place eke number eka merhanadi parameeeter eka lesa yediya yuthuya.

                SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
                String date1 = sdf1.format(jDateChooser_Addmited_Date1.getDate());
                pst.setString(1, date1);//Date Chhoser eken date ekaa add kirima

                pst.setString(2, jTextField_Ptn_Name.getText());
                pst.setString(3, jTextField_Doc_Name.getText());

                SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
                String date2 = sdf2.format(jDateChooser_DOB.getDate());
                pst.setString(4, date2);//Date Chhoser eken date ekaa add kirima

                String gender;  // Combo Box ekaka data `db ekata connect karana hati.
                gender = jComboBox_Gender.getSelectedItem().toString();
                pst.setString(5, gender);

                pst.setString(6, jTextField_Tel_No1.getText());
                pst.setString(7, jTextField_Address.getText());
                pst.setString(8, jTextField_Relation_Name.getText());
                pst.setString(9, jTextField_Relation_Phone_No.getText());
                pst.setString(10, jTextArea_About.getText());
                pst.executeUpdate();

                System.out.println(query);
                System.out.println("1 row affected");

                JOptionPane.showMessageDialog(null, "Data Updated Succsessfully!!!");

                con.close();

            } catch (HeadlessException | ClassNotFoundException | SQLException ex) {

                Logger.getLogger(JFrame_7.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex);

            }

            jTextArea_About.setText(null);
            jTextField_Address.setText(null);
            jDateChooser_DOB.setDate(null);
            jDateChooser_Addmited_Date1.setDate(null);
            jTextField_Doc_Name.setText(null);
            jTextField_Patient_ID.setText(null);
            jTextField_Ptn_Name.setText(null);
            jTextField_Tel_No1.setText(null);
            jComboBox_Gender.setSelectedItem("Select Gender");
            jTextField_Relation_Name.setText(null);
            jTextField_Relation_Phone_No.setText(null);
            jTextField_Patient_ID.grabFocus();

        }

        showTableData();
    }//GEN-LAST:event_jButton_UpdateActionPerformed

    private void jButton_SerchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SerchActionPerformed

        if (jTextField_Patient_ID.getText().trim().isEmpty()) {

            getToolkit().beep();

            JOptionPane.showMessageDialog(null, "You should enter the patient id before Search data into the database.", "Warnimg!!!", JOptionPane.WARNING_MESSAGE);

        } else {

            try {

                String url = "jdbc:mysql://localhost:3306/"; //url
                String db = "hospital_management_system_database"; //Database Name
                String user = "root";//user name
                String pword = "123456"; //password

                System.out.println(jTextField_Patient_ID.getText());//search kirimata yoda gannna textbox eke variabale name eka.
                Connection con = null;
                Class.forName("com.mysql.cj.jdbc.Driver").newInstance(); //driver
                con = DriverManager.getConnection(url + db, user, pword);

                //SQL Query
                String sql = "SELECT * FROM patient_details WHERE Patient_ID = '" + jTextField_Patient_ID.getText() + "'";

                ResultSet res = con.createStatement().executeQuery(sql);
                System.out.println(sql);

                while (res.next()) {

                    /* System.out.println(res.getString("Patient_Name"));
                System.out.println(res.getString("Doctor_Name"));*/
                    jDateChooser_Addmited_Date1.setDate(res.getDate("Admited_Date"));
                    jTextField_Ptn_Name.setText(res.getString("Name_of_patient"));  //Text feild wala names ewa form eke athi piliwelata yodanna.
                    jTextField_Doc_Name.setText(res.getString("Name_of_doctor"));
                    jDateChooser_DOB.setDate(res.getDate("Date_Of_Birth"));   //Search data using JDayChooser
                    jComboBox_Gender.setSelectedItem(res.getString("Gender"));  //Scerch data using combo box
                    jTextField_Tel_No1.setText(res.getString("Telephon_No"));
                    jTextField_Address.setText(res.getString("Address"));
                    jTextField_Relation_Name.setText(res.getString("Name_of_Relational"));
                    jTextField_Relation_Phone_No.setText(res.getString("Telephone_No_of_Relational"));
                    jTextArea_About.setText(res.getString("About_of_patient"));

                    System.out.println(res.getString("Name_of_patient") + " " + res.getString("Name_of_doctor"));
                    System.out.println("Row Affected");
                    //Vadagthma field deke names yodanna.

                }

                con.close();//Connection eka close kirima.

            } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | SQLException ex) {

                Logger.getLogger(JFrame_7.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex);

                jTextArea_About.setText(null);
                jTextField_Address.setText(null);
                jDateChooser_DOB.setDate(null);
                jDateChooser_Addmited_Date1.setDate(null);
                jTextField_Doc_Name.setText(null);
                jTextField_Patient_ID.setText(null);
                jTextField_Ptn_Name.setText(null);
                jTextField_Tel_No1.setText(null);
                jComboBox_Gender.setSelectedItem("Select Gender");
                jTextField_Relation_Name.setText(null);
                jTextField_Relation_Phone_No.setText(null);
                jTextField_Patient_ID.grabFocus();

            }

        }

        showTableData();
    }//GEN-LAST:event_jButton_SerchActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        //TABALES SHOULD BE ENABLED FIRST
        int rows = jTable1.getRowCount();

        if (rows != 0) {

            int row_selected = jTable1.getSelectedRow();

            String pid = jTable1.getValueAt(row_selected, 0).toString();
            Object admited_date = jTable1.getValueAt(row_selected, 1);
            String p_Name = jTable1.getValueAt(row_selected, 2).toString();
            String D_Name = jTable1.getValueAt(row_selected, 3).toString();
            Object dob = jTable1.getValueAt(row_selected, 4);
            String gender = jTable1.getValueAt(row_selected, 5).toString();
            String tel_no = jTable1.getValueAt(row_selected, 6).toString();
            String address = jTable1.getValueAt(row_selected, 7).toString();
            String relation_name = jTable1.getValueAt(row_selected, 8).toString();
            String relatio_tel_no = jTable1.getValueAt(row_selected, 9).toString();
            String about = jTable1.getValueAt(row_selected, 10).toString();

            jTextField_Patient_ID.setText(pid);
            jDateChooser_Addmited_Date1.setDate((java.util.Date) admited_date);
            jTextField_Ptn_Name.setText(p_Name);
            jTextField_Doc_Name.setText(D_Name);
            jDateChooser_DOB.setDate((java.util.Date) dob);
            jComboBox_Gender.setSelectedItem(gender);
            jTextField_Tel_No1.setText(tel_no);
            jTextField_Address.setText(address);
            jTextField_Relation_Name.setText(relation_name);
            jTextField_Relation_Phone_No.setText(relatio_tel_no);
            jTextArea_About.setText(about);

        } else {

            JOptionPane.showMessageDialog(null, rows);
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        JFrame_5 f5 = new JFrame_5();
        f5.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem_Open_CalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_Open_CalActionPerformed

        JFrame_18 f18 = new JFrame_18();
        f18.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem_Open_CalActionPerformed

    private void jMenuItem_NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_NewActionPerformed

        int a;
        a = JOptionPane.showConfirmDialog(null, "Are you sure to you save that data?", "Go to new form", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (a == 0) {

            jTextArea_About.setText(null);
            jTextField_Address.setText(null);
            jDateChooser_DOB.setDate(null);
            jDateChooser_Addmited_Date1.setDate(null);
            jTextField_Doc_Name.setText(null);
            jTextField_Patient_ID.setText(null);
            jTextField_Ptn_Name.setText(null);
            jTextField_Tel_No1.setText(null);
            jComboBox_Gender.setSelectedItem("Select Gender");
            jTextField_Relation_Name.setText(null);
            jTextField_Relation_Phone_No.setText(null);
            jTextField_Patient_ID.grabFocus();

        }
    }//GEN-LAST:event_jMenuItem_NewActionPerformed

    private void jMenuItem1_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1_logoutActionPerformed

        int a;
        a = JOptionPane.showConfirmDialog(null, "Are you sure to you want to logout the program.", "Logout the system.", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

        if (a == 0) {

            this.dispose();
            JFrame_10 f10 = new JFrame_10();
            f10.setVisible(true);

        }
    }//GEN-LAST:event_jMenuItem1_logoutActionPerformed

    private void jMenuItem_Close1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_Close1ActionPerformed

        int b;
        b = JOptionPane.showConfirmDialog(null, "Are you sure to close the program now?", "Close the program...", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (b == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem_Close1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        this.dispose();
        JFrame_31 f31 = new JFrame_31();
        f31.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    public void showTableData() {

        try {

            String url = "jdbc:mysql://localhost:3306/";
            String db = "hospital_management_system_database";
            String user = "root";
            String pword = "123456";

            Connection con = null;
            Class.forName("com.mysql.cj.jdbc.Driver").newInstance();
            con = DriverManager.getConnection(url + db, user, pword);

            String query = "SELECT * FROM patient_details;";

            PreparedStatement pst = con.prepareStatement(query);
            ResultSet res = con.createStatement().executeQuery(query);

            pst = con.prepareStatement(query);
            res = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(res));

        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | SQLException ex) {

            Logger.getLogger(JFrame_7.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                /*if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;*/
                UIManager.setLookAndFeel("com.jtattoo.plaf.smart.SmartLookAndFeel");
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame_7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame_7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame_7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame_7().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Add;
    private javax.swing.JButton jButton_Back;
    private javax.swing.JButton jButton_Clear;
    private javax.swing.JButton jButton_Delete;
    private javax.swing.JButton jButton_Serch;
    private javax.swing.JButton jButton_Update;
    public static javax.swing.JComboBox<String> jComboBox_Gender;
    public static com.toedter.calendar.JDateChooser jDateChooser_Addmited_Date1;
    public static com.toedter.calendar.JDateChooser jDateChooser_DOB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JLabel jLabel_Date;
    public static javax.swing.JLabel jLabel_Time;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem1_logout;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem_Close1;
    private javax.swing.JMenuItem jMenuItem_New1;
    private javax.swing.JMenuItem jMenuItem_Open_Cal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTable jTable1;
    public static javax.swing.JTextArea jTextArea_About;
    public static javax.swing.JTextField jTextField_Address;
    public static javax.swing.JTextField jTextField_Doc_Name;
    public static javax.swing.JTextField jTextField_Patient_ID;
    public static javax.swing.JTextField jTextField_Ptn_Name;
    public static javax.swing.JTextField jTextField_Relation_Name;
    public static javax.swing.JTextField jTextField_Relation_Phone_No;
    public static javax.swing.JTextField jTextField_Tel_No1;
    // End of variables declaration//GEN-END:variables
}
